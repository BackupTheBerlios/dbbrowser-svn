/*
 * DBBrowser is software for browsing the structure and contents of databases.
 * Copyright (C) 2001 Philip A. Chapman
 * 
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; either version 2 of the License, or (at your option)
 * any later version.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the
 *
 *                     Free Software Foundation, Inc.
 *                    51 Franklin Street, Fifth Floor
 *                      Boston, MA  02110-1301, USA.
 */
package us.pcsw.dbbrowser.dataimport;

/**
 * com.alliancemanaged.simis.importer.ImportEvent
 * -
 * The event passed to ImportListeners in order to notify them of import
 * status.
 *
 * <P><B>Revision History:</B><UL>
 * <LI>Feb 7, 2005 This class was created by pchapman.</LI>
 * </UL></P>
 */
public class ImportEvent
{
	/**
	 * The import is initializing.  At this time, there is no row count and no
	 * current row.
	 */
	public static final int EVENT_TYPE_INITIALIZING = 0;
	
	/**
	 * The importer is passing a message.  Usually this is a warning or an
	 * error message that should be provided for the user.
	 */
	public static final int EVENT_TYPE_MESSAGE = 1;
	
	/**
	 * Notification of progress.  The listener can check the current row to
	 * see what the current level of progress is.
	 */
	public static final int EVENT_TYPE_PROGRESSED = 2;
	
	/**
	 * Indicates that the import has just been started.
	 */
	public static final int EVENT_TYPE_STARTED = 3;
	
	/**
	 * Indicates that the import has stopped.  This can happen at the
	 * completion of the import or by the occurance of an error that
	 * cannot be overcome.
	 */
	public static final int EVENT_TYPE_STOPPED = 4;
	
	private int curRow;
	private String message;
	private int rowCount;
	private Object source;
	private int type;
	
	ImportEvent(Object source, int rowCount, int curRow, String message, int type)
	{
		this.curRow = curRow;
		this.message = message;
		this.rowCount = rowCount;
		this.source = source;
		this.type = type;
	}
	
	ImportEvent(Object source, int rowCount, int curRow, String message)
	{
		this(source, rowCount, curRow, message, EVENT_TYPE_MESSAGE);
	}
	
	/**
	 * The current row in the CSV file being processed.
	 */
	public int getCurrentRow()
	{
		return curRow;
	}
	
	/**
	 * The warning or error message generated by the import tool.
	 */
	public String getMessage()
	{
		return message;
	}
	
	/**
	 * The total number of rows in the CSV file to process.
	 */
	public int getRowCount()
	{
		return rowCount;
	}
	
	/**
	 * The source of the event.  This will be an instance of the
	 * ImporterThread class.
	 */
	public Object getSource()
	{
		return source;
	}
	
	/**
	 * The type of notification being sent to the listener.
	 */
	public int getEventType()
	{
		return type;
	}
}
